apply plugin: 'maven-publish'

def groupId = project.hasProperty('PUBLISH_GROUP_ID') ? project.PUBLISH_GROUP_ID : 'your.default.group'
def artifactId = project.hasProperty('PUBLISH_ARTIFACT_ID') ? project.PUBLISH_ARTIFACT_ID : 'your.default.artifact'
def version = project.hasProperty('PUBLISH_VERSION') ? project.PUBLISH_VERSION : '1.0.0'

def localReleaseDest = "${buildDir}/release/${version}"

task androidJavadocs(type: Javadoc) {
    failOnError = false
    source = android.sourceSets.main.java.srcDirs
    ext.androidJar = "${android.sdkDirectory}/platforms/${android.compileSdkVersion}/android.jar"
    classpath += files(ext.androidJar)
}

task androidJavadocsJar(type: Jar, dependsOn: androidJavadocs) {
    archiveClassifier.set('javadoc')
    from androidJavadocs.destinationDir
}

task androidSourcesJar(type: Jar) {
    archiveClassifier.set('sources')
    from android.sourceSets.main.java.srcDirs
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            groupId = groupId
            artifactId = artifactId
            version = version
            from components.release // Ensure you have a `release` component defined
            artifact androidSourcesJar
            artifact androidJavadocsJar
        }
    }
    repositories {
        maven {
            url = uri("file://${localReleaseDest}")
        }
    }
}

task zipRelease(type: Zip) {
    from localReleaseDest
    destinationDirectory = buildDir
    archiveFileName = "release-${version}.zip"
}

task generateRelease {
    doLast {
        println "Release ${version} can be found at ${localReleaseDest}/"
        println "Release ${version} zipped can be found at ${buildDir}/release-${version}.zip"
    }
}

generateRelease.dependsOn(publish)
generateRelease.dependsOn(zipRelease)

artifacts {
    archives androidSourcesJar
    archives androidJavadocsJar
}
